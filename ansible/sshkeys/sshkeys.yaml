---
- name: Create user with SSH key access
  hosts: all
  become: yes
  vars:
    username: chernyavskyda
    user_password: qcdKqaM8
    ssh_public_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    
  tasks:
    - name: Create user {{ username }}
      user:
        name: "{{ username }}"
        password: "{{ user_password | password_hash('sha512') }}"
        shell: /bin/bash
        create_home: yes
        home: "/home/{{ username }}"
        groups: sudo
        append: yes
        state: present
      ignore_errors: yes

    - name: Ensure .ssh directory exists
      file:
        path: "/home/{{ username }}/.ssh"
        state: directory
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0700'

    - name: Add SSH public key
      authorized_key:
        user: "{{ username }}"
        key: "{{ ssh_public_key }}"
        state: present
        manage_dir: yes

    - name: Set proper permissions for SSH directory
      file:
        path: "/home/{{ username }}/.ssh"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0700'
        recurse: yes

    - name: Add user to sudoers (Ubuntu/Debian)
      lineinfile:
        path: /etc/sudoers.d/{{ username }}
        line: "{{ username }} ALL=(ALL) NOPASSWD:ALL"
        state: present
        create: yes
        mode: '0440'
        validate: 'visudo -cf %s'
      when: ansible_os_family == "Debian"

    - name: Add user to sudoers (RedHat/CentOS)
      lineinfile:
        path: /etc/sudoers.d/{{ username }}
        line: "{{ username }} ALL=(ALL) NOPASSWD:ALL"
        state: present
        create: yes
        mode: '0440'
        validate: 'visudo -cf %s'
      when: ansible_os_family == "RedHat"

    - name: Ensure SSH service is running
      service:
        name: ssh
        state: started
        enabled: yes
      when: ansible_os_family == "Debian"

    - name: Ensure SSH service is running (RedHat)
      service:
        name: sshd
        state: started
        enabled: yes
      when: ansible_os_family == "RedHat"

    - name: Test SSH key authentication
      command: whoami
      become_user: "{{ username }}"
      register: test_result
      changed_when: false

    - name: Display test result
      debug:
        msg: "User {{ username }} created successfully. Test result: {{ test_result.stdout }}"
